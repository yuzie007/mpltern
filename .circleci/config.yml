# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  python: circleci/python@2.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test: # This is the name of the job, feel free to change it to better match what you're trying to do!
    parameters:
      matplotlib-version:
        type: string
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    docker:
      - image: cimg/python:3.9
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      - checkout
      - run:
          name: Before_install
          command: |
            sudo apt -qq update
            sudo apt-get -y install ghostscript inkscape
      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade pip
            python -m pip install setuptools==59.8.0 # Matplotlib 3.4
            python -m pip install numpy==1.26.4
            python -m pip install pillow==9.0
            python -m pip install matplotlib==<< parameters.matplotlib-version >>
            python -m pip install pytest>=4.6
            python -m pip install pytest-cov
            python -m pip install codecov coverage
      - run:
          name: Test with pytest
          command: |
            python -mpytest -ra --cov=./ --log-level=DEBUG

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          matrix:
            parameters:
              matplotlib-version: [3.4.0, 3.5.0, 3.6.0, 3.7.0, 3.8.0]
